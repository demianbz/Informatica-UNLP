{5. Realizar un programa que lea y almacene la información de productos de un supermercado. De cada
producto se lee: código, descripción, stock actual, stock mínimo y precio. La lectura finaliza cuando se ingresa
el código -1, que no debe procesarse. Una vez leída y almacenada toda la información, calcular e informar:

a. Porcentaje de productos con stock actual por debajo de su stock mínimo.

b. Descripción de aquellos productos con código compuesto por al menos tres dígitos pares.

c. Código de los dos productos más económicos.}

program ejercicio5;
type
    data = record
        codigo,stockA,stockM:integer;
        precio:real;
        descrip:string[50];
    end;
    lista=^nodo;
    nodo=record
        datos:data;
        sig:lista;
    end;
procedure cargarNodos (var l:lista);
var
    aux:lista;
    codigo:integer;
begin
    l:=nil;
    codigo:=0;
    writeln;
    writeln('Introduzca los datos del producto');
    while (codigo<>-1) do begin
        new(aux);
        writeln;
        write('Codigo: ');
        readln(codigo);
        if (codigo<>-1) then begin
            aux^.datos.codigo:=codigo;
            write('Descripcion: ');
            readln(aux^.datos.descrip);
            write('Stock Actual: ');
            readln(aux^.datos.stockA);
            write('Stock Minimo: ');
            readln(aux^.datos.stockM);
            write('Precio: ');
            readln(aux^.datos.precio);
            aux^.sig:=l;
            l:=aux;
            writeln('----------------------------------------');
        end;
    end;
end;
procedure imprimir(l:lista);
begin
    writeln;
    writeln('-----------------LISTA------------------');
    while (l<>nil) do begin
        writeln;
        writeln('Codigo: ',l^.datos.codigo);
        writeln('Descripcion: ',l^.datos.descrip);
        writeln('Stock Actual: ',l^.datos.stockA);
        writeln('Stock Minimo: ',l^.datos.stockM);
        writeln('Precio: ',l^.datos.precio:0:2);
        l:=l^.sig;
    end;
end;
procedure stocks(l:lista);
var
    aux1,aux2:integer;
    porcentaje:real;
begin
    writeln;
    writeln('--------------STOCKS-----------------');
    aux1:=0;
    aux2:=0;
    while (l<>nil) do begin
        aux1:=aux1+1;
        if (l^.datos.stockA<l^.datos.stockM) then
            aux2:=aux2+1;
        l:=l^.sig;
    end;
    porcentaje:=(aux2*100)/aux1;
    writeln;
    writeln('El ',porcentaje:0:2,'% de los productos tienen un stock actual por debajo de su stock minimo');
end;
procedure pares (l:lista);
var
    aux1,digito,num:integer;
begin
    writeln;
    writeln('------------CODIGOS PARES-----------------');
    while (l<>nil) do begin
        aux1:=0;
        num:=l^.datos.codigo;
        while (num<>0) do begin
            digito:= num mod 10;
            if (digito mod 2 = 0) then
                aux1:=aux1+1;
            num:=num div 10;
        end;
        if (aux1>=3) then
            writeln('El prodcucto ',l^.datos.descrip,' tiene al menos 3 digitos pares en su codigo: ',l^.datos.codigo);
        l:=l^.sig;
    end;
end;
procedure economicos(l:lista);
var
    min1,min2:real;
    cod1,cod2:integer;
begin
    writeln;
    writeln('------------ECONOMICOS-----------------');
    min1:=32700;
    min2:=32700;
    cod1:=0;
    cod2:=0;
    while (l<> nil) do begin
        if (l^.datos.precio<min1) or (min1=0) then begin
            min2:=min1;
            min1:=l^.datos.precio;
            cod2:=cod1;
            cod1:=l^.datos.codigo;
        end
        else if (l^.datos.precio<min2) or (min2=0) then begin
            min2:=l^.datos.precio;
            cod2:=l^.datos.codigo;
        end;
        l:=l^.sig;
    end;
    writeln('Los productos mas economicos son ',cod1,' a ',min1:0:2,'$ y ',cod2,' a ',min2:0:2,'$');
end;
var
    productos:lista;
begin
    cargarNodos(productos);
    imprimir(productos);
    {a}
    stocks(productos);
    {b}
    pares(productos);
    {c}
    economicos(productos);
end.